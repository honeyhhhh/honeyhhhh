<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[linkTab]]></title>
    <url>%2Flink%2F</url>
    <content type="text"><![CDATA[线性表的链式存储结构（一）：单链表什么是线性表(List)简单来说，就是有线一样的结构定义：由零个或多个数据元素组成的有序序列特点： 有序 有限 若将线性表记为(a1,a2.ai-1,ai,ai+1…an);则ai-1称为ai的直接前驱元素，ai+1称为ai的直接后继元素，第一个元素无前驱，最后一个元素无后继，当n=0时，称为空表。 线性表的顺序存储结构粗略提一下，线性表的两种存储结构之顺序存储结构，其实跟 数组长的一毛一样，其实也不算一毛一样，这以后再说。定义：用一段地址连续的存储单元依次存储线性表的数据结构 链表线性表的链式存储结构特点是用一组任意存储单元存储线性表的数据元素，这组存储单元可以在内存中未被占用的任意位置。 结点(Node):结点由两部分组成，用来存储数据元素信息的域称为数据域，存储直接后继位置的称为指针域。指针域中存储的信息称为指针或者链。 n个结点链接成的一个链表，即为线性表(a1,a2…an)的链式存储结构。 单链表:每个结点只包含一个指针域。 对于线性表来说，有头有尾，链表也不例外。链表中的第一个结点的存储位置叫做头指针，最后一个结点指针为空(NULL)。 图片 头指针和头结点的异同 头指针 头指针是指链表指向第一个结点的指针，若链表有头结点，则是指向头结点的指针 头指针具有标识作用，所以常用头指针冠以链表的名字(指针变量的名字) 头指针是链表的必要元素，无论链表是否为空，头指针均不为空。 头结点 头结点是为了操作统一和方便而设立的，放在第一个元素的结点之前，其数据域一般无意义，但也可以用来存储链表的长度 有了头结点，对放在第一个元素结点前插入结点和删除第一个结点和其他结点的操作就统一了。 头结点不是链表的必要元素 单链表存储结构图片 假设p是指向线性表第i个元素的指针，则该结点ai的数据域可以用p-&gt;date的值表示，结点ai的指针域可以用p-&gt;next表示，p-&gt;next的值是一个指针。 p-&gt;next指向的是i+1个元素！！也就是指向ai+1的指针。 单链表的操作:插入，删除，创建，逆置，排序不多bb，直接上代码假设这是一个通讯录吧，貌似建立的链表是没有头结点的,我觉得没有头结点的链表比较直观，但是操作起来确实有点麻烦。。 1234567891011struct contacts&#123; char name[20]; char phone[20]; struct contacts *next;&#125;;int main(void)&#123; struct contacts *head = NULL;&#125; 头插法建立单链表12345678910111213141516171819void addPersion(struct contacts **head)//传进来头指针的地址，修改头指针的指向&#123; struct contacts *person,*temp; person = (struct contacts *)malloc(sizeof(struct contacts)); if(person == NULL) exit(1);//创建失败 getInput(person);//再写一个函数填充信息 if(*head != NULL)//非空链表 &#123; temp = *head; *head = person; person-&gt;next = temp; &#125; else//空链表 &#123; *head = person; person-&gt;next = NULL; &#125;&#125; 尾插法建立单链表//单链表的查找//单链表的遍历//链表的插入//单链表的删除//单链表的释放(整表删除)//单链表的排序 but no picture you say a jb 单链表结构与顺序存储结构的优缺点 时间性能 查找 顺序结构O(1) 单链表O(n) 插入和删除 顺序结构需要平均移动表长一半的元素，时间O(n) 单链表在计算出某位置的指针后，时间O(1) 空间性能顺序结构需要与分配存储空间，而单链表不需要 综上所述，各有其优缺点。。。。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello myblog!]]></title>
    <url>%2Fdiary181228%2F</url>
    <content type="text"><![CDATA[人生在勤，不索何获？ 经过了五天的努力，我的博客基本搭建好了，虽然在移动端还是有一些不尽人意，但我还挺满足的，毕竟自己也不是学前端的。搭这个博客我还是很纠结的，因为实际上搭博客我只花了一天，已经可以实现它的功能了，但是我想让它好看一点。爱美之心人皆有之，紧接着，我看到了许多优秀的大佬的作品，实在是非常喜欢，于是我便沉迷了。我很矛盾，因为离期末考也就十几天，然而我心里并没有底，而且我还有好多事情没干。时间过的很快，一学期就要过去了，可是我早睡早起的目标依旧没有实现，我也相信这是很多人的目标，所以这也是我寒假的目标，而我现在的目标便是做好现在该做的事，具体是啥事我一时也说不会出来。接下去我会找个时间记录我这几天的辛酸….感觉自己过的很充实，但又害怕把时间用错地方。。。。。最后，纪念一下我的生日，就在刚刚过去不久的昨天，还有过去也不久的前天（农历）哈哈哈哈哈。]]></content>
      <categories>
        <category>diary</category>
      </categories>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test2]]></title>
    <url>%2Ftest2%2F</url>
    <content type="text"></content>
      <categories>
        <category>test1</category>
      </categories>
      <tags>
        <tag>test1</tag>
        <tag>test2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2Ftest%2F</url>
    <content type="text"></content>
      <tags>
        <tag>test1</tag>
        <tag>test2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
